1	1	Keyword	PROGRAM	program
1	9	Id	Prog	Prog
1	13	Separator	Semicolon	;
3	1	Keyword	CONST	const
5	1	Id	c0	c0
5	4	Operation	Equal	=
5	6	Invalid		
5	7	Integer	2	2
5	8	Separator	Comma	,
5	9	Double	1,5	1.5
5	12	Invalid		
5	13	Separator	Semicolon	;
7	1	Keyword	VAR	var
9	1	Id	i	i
9	2	Separator	Colon	:
9	3	Id	integer	integer
9	10	Separator	Semicolon	;
11	1	Id	v	v
11	2	Separator	Colon	:
11	3	Id	vector	vector
11	9	Separator	LeftSquareBracket	[
11	10	Integer	10	10
11	12	Separator	RightSquareBracket	]
11	13	Separator	Semicolon	;
13	1	Id	c	c
13	2	Separator	Colon	:
13	3	Id	complex	complex
13	10	Separator	Semicolon	;
15	1	Keyword	BEGIN	begin
17	1	Id	i	i
17	2	Operation	Assigment	:=
17	4	Integer	1	1
17	5	Separator	Semicolon	;
19	1	Keyword	WHILE	while
19	7	Id	i	i
19	8	Operation	LessThan	<
19	9	Operation	Equal	=
19	10	Integer	10	10
19	13	Keyword	DO	do
21	1	Keyword	BEGIN	begin
23	1	Id	im	im
23	3	Separator	LeftParenthesis	(
23	4	Id	v	v
23	5	Separator	LeftSquareBracket	[
23	6	Id	i	i
23	7	Separator	RightSquareBracket	]
23	8	Separator	RightParenthesis	)
23	9	Operation	Assigment	:=
23	11	Id	i	i
23	12	Separator	Semicolon	;
25	1	Id	re	re
25	3	Separator	LeftParenthesis	(
25	4	Id	v	v
25	5	Separator	LeftSquareBracket	[
25	6	Id	i	i
25	7	Separator	RightSquareBracket	]
25	8	Separator	RightParenthesis	)
25	9	Operation	Assigment	:=
25	11	Double	1,1	1.1
25	14	Operation	MultiplicationWithAssigment	*
25	15	Id	i	i
25	16	Separator	Semicolon	;
27	1	Id	i	i
27	2	Operation	Assigment	:=
27	4	Id	i	i
27	5	Operation	Addition	+
27	6	Integer	1	1
27	7	Separator	Semicolon	;
29	1	Keyword	END	end
29	4	Separator	Semicolon	;
31	1	Id	c	c
31	2	Operation	Assigment	:=
31	4	Id	v	v
31	5	Separator	LeftSquareBracket	[
31	6	Integer	5	5
31	7	Separator	RightSquareBracket	]
31	8	Operation	MultiplicationWithAssigment	*
31	9	Id	c0	c0
31	11	Separator	Semicolon	;
33	1	Keyword	WRITE	write
33	6	Separator	LeftParenthesis	(
33	7	Id	c	c
33	8	Separator	RightParenthesis	)
33	9	Separator	Semicolon	;
35	1	Keyword	END	end
35	4	Separator	Dot	.
35	5	Eof	EOF	